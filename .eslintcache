[{"C:\\React\\currency-converter\\src\\index.js":"1","C:\\React\\currency-converter\\src\\App.js":"2","C:\\React\\currency-converter\\src\\reportWebVitals.js":"3","C:\\React\\currency-converter\\src\\GitHub.js":"4","C:\\React\\currency-converter\\src\\serviceWorker.js":"5"},{"size":530,"mtime":1610687742116,"results":"6","hashOfConfig":"7"},{"size":3299,"mtime":1610688264804,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":1415,"mtime":1610877497747,"results":"10","hashOfConfig":"7"},{"size":5386,"mtime":1610685683786,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"mkmt59",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\React\\currency-converter\\src\\index.js",[],["27","28"],"C:\\React\\currency-converter\\src\\App.js",["29","30"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport fetch from \"unfetch\";\nimport useSWR from \"swr\";\nimport {\n  Container,\n  Paper,\n  Grid,\n  TextField,\n  Select,\n  MenuItem\n} from \"@material-ui/core\";\n\nconst API_URL = \"https://api.exchangeratesapi.io\";\n\nconst fetcher = async path => {\n  const res = await fetch(API_URL + path);\n  const json = await res.json();\n  return json;\n};\n\nfunction App() {\n  const { data: currencies } = useSWR(\"/latest?base=EUR\", fetcher);\n\n  const [fromValue, setFromValue] = useState(1);\n  const [toValue, setToValue] = useState(1);\n\n  const [fromCurrency, setFromCurrency] = useState(\"EUR\");\n  const [toCurrency, setToCurrency] = useState(\"EUR\");\n\n  const handleFromCurrencyChange = e => {\n    setFromCurrency(e.target.value);\n  };\n\n  const handleToCurrencyChange = e => {\n    setToCurrency(e.target.value);\n  };\n\n  const handleFromValueChange = e => {\n    setFromValue(parseFloat(e.target.value));\n  };\n\n  const handleToValueChange = e => {\n    setToValue(parseFloat(e.target.value));\n  };\n\n  const convertFromTo = () => {\n    const fromRate =\n      fromCurrency === \"EUR\" ? 1 : currencies.rates[fromCurrency];\n    const valueInEur = fromValue / fromRate;\n    const toRate = toCurrency === \"EUR\" ? 1 : currencies.rates[toCurrency];\n    setToValue(valueInEur * toRate);\n  };\n\n  const convertToFrom = () => {\n    const toRate = toCurrency === \"EUR\" ? 1 : currencies.rates[toCurrency];\n    const valueInEur = toValue / toRate;\n    const fromRate =\n      fromCurrency === \"EUR\" ? 1 : currencies.rates[fromCurrency];\n    setFromValue(valueInEur * fromRate);\n  };\n\n  useEffect(() => {\n    convertFromTo();\n  }, [fromValue, toCurrency]);\n\n  useEffect(() => {\n    convertToFrom();\n  }, [toValue, fromCurrency]);\n\n  if (!currencies) {\n    return null;\n  }\n\n  return (\n    <Container className=\"currency-exchange-container\" fixed>\n      <h1>Currency Exchange Rates</h1>\n      <Paper\n        className=\"currency-exchange-paper\"\n        variant=\"outlined\"\n        elavation={1}\n      >\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            <TextField\n              type=\"number\"\n              value={fromValue}\n              onChange={handleFromValueChange}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              type=\"number\"\n              value={toValue}\n              onChange={handleToValueChange}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <Select value={fromCurrency} onChange={handleFromCurrencyChange}>\n              <MenuItem value={\"EUR\"}>EUR</MenuItem>\n              {Object.keys(currencies.rates).map((rate, key) => (\n                <MenuItem key={key} value={rate}>\n                  {rate}\n                </MenuItem>\n              ))}\n            </Select>\n          </Grid>\n          <Grid item xs={6}>\n            <Select value={toCurrency} onChange={handleToCurrencyChange}>\n              <MenuItem value={\"EUR\"}>EUR</MenuItem>\n              {Object.keys(currencies.rates).map((rate, key) => (\n                <MenuItem key={key} value={rate}>\n                  {rate}\n                </MenuItem>\n              ))}\n            </Select>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Container>\n  );\n      }\n\nexport default App;","C:\\React\\currency-converter\\src\\reportWebVitals.js",[],["31","32"],"C:\\React\\currency-converter\\src\\GitHub.js",["33"],"import React from 'react';\r\nimport \"./GitHub.css\";\r\n\r\nconst GitHub = () => {\r\n    return <a href=\"https://github.com/Pratik02071998\" className=\"github-corner\" target=\"_blank\" title=\"Open in GitHub\">\r\n        <svg width=\"80\" height=\"80\" viewBox=\"0 0 250 250\" style={{ position: 'absolute', top: 0, border: 0, right: 0 }}>\r\n            <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\r\n            <path\r\n                d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\r\n                fill=\"white\" style={{ transformOrigin: '130px 106px' }} className=\"octo-arm\"></path>\r\n            <path\r\n                d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\r\n                fill=\"white\" className=\"octo-body\"></path>\r\n        </svg>\r\n    </a>\r\n}\r\n\r\nexport default GitHub;","C:\\React\\currency-converter\\src\\serviceWorker.js",[],["34","35"],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":65,"column":6,"nodeType":"42","endLine":65,"endColumn":29,"suggestions":"43"},{"ruleId":"40","severity":1,"message":"44","line":69,"column":6,"nodeType":"42","endLine":69,"endColumn":29,"suggestions":"45"},{"ruleId":"36","replacedBy":"46"},{"ruleId":"38","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":5,"column":12,"nodeType":"50","endLine":5,"endColumn":121},{"ruleId":"36","replacedBy":"51"},{"ruleId":"38","replacedBy":"52"},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'convertFromTo'. Either include it or remove the dependency array.","ArrayExpression",["55"],"React Hook useEffect has a missing dependency: 'convertToFrom'. Either include it or remove the dependency array.",["56"],["53"],["54"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement",["53"],["54"],"no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},{"desc":"59","fix":"60"},"Update the dependencies array to be: [convertFromTo, fromValue, toCurrency]",{"range":"61","text":"62"},"Update the dependencies array to be: [toValue, fromCurrency, convertToFrom]",{"range":"63","text":"64"},[1662,1685],"[convertFromTo, fromValue, toCurrency]",[1735,1758],"[toValue, fromCurrency, convertToFrom]"]